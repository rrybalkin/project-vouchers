CREATE TABLE ASSOCIATIONS (
  ASSOCIATION_ID INT
    CONSTRAINT CT_ASSOCIATIONS_PK_ID
      PRIMARY KEY,
  NAME VARCHAR2(100)
  CONSTRAINT CT_ASSOCIATIONS_NN_NAME NOT NULL 
  CONSTRAINT CT_ASSOCIATIONS_UN_NAME UNIQUE (name),
  DESCRIPTION VARCHAR2(1000)
);

DROP TABLE VISITORS;
CREATE TABLE VISITORS (
  VISITOR_ID INT
    CONSTRAINT CT_VISITORS_PK_ID
      PRIMARY KEY,
  FIRSTNAME VARCHAR2(100)
  CONSTRAINT CT_VISITORS_NN_FIRSTNAME
      NOT NULL,
  LASTNAME VARCHAR2(100)
  CONSTRAINT CT_VISITORS_NN_LASTNAME
      NOT NULL,
  MIDDLENAME VARCHAR2(100),
  ASSOCIATION INT 
    CONSTRAINT CT_VISITORS_FK_ASSOCIATION_ID
      REFERENCES ASSOCIATIONS (ASSOCIATION_ID),
  DESCRIPTION VARCHAR2(1000)
);

CREATE TABLE TALONS (
  TALON_ID INT
    CONSTRAINT CT_TALONS_PK_ID
      PRIMARY KEY,
  VISITOR_ID INT
    CONSTRAINT CT_TALONS_FK_VISITOR_ID
      REFERENCES VISITORS (VISITOR_ID),
  COUNT_LUNCH INT
    CONSTRAINT CT_TALONS_NN_LUNCHES
      NOT NULL,
  COUNT_DINNER INT
    CONSTRAINT CT_TALONS_NN_DINNERS
      NOT NULL
);

CREATE TABLE VISITOR_TALON (
  VISITOR_ID INT
    CONSTRAINT CT_VT_NN_VISITOR_ID
      NOT NULL,
  TALON_ID INT
    CONSTRAINT CT_VT_NN_TALON_ID
      NOT NULL
);

CREATE SEQUENCE sq_visitor_id
  INCREMENT BY 1
  START WITH 1
  MAXVALUE 10000
  NOCACHE
  NOCYCLE;
  
CREATE OR REPLACE TRIGGER increment_for_visitor
  BEFORE INSERT
  ON visitors
  FOR EACH ROW
BEGIN
  IF :NEW.VISITOR_ID IS NULL THEN
    SELECT sq_visitor_id.nextval INTO :NEW.VISITOR_ID
      FROM dual;
  END IF;
END;

CREATE SEQUENCE sq_association_id
  INCREMENT BY 1
  START WITH 1
  MAXVALUE 10000
  NOCACHE
  NOCYCLE;
  
CREATE SEQUENCE sq_talons_id
  INCREMENT BY 1
  START WITH 1
  MAXVALUE 10000
  NOCACHE
  NOCYCLE;
  
CREATE OR REPLACE TRIGGER increment_for_associations
  BEFORE INSERT
  ON associations
  FOR EACH ROW
BEGIN
  IF :NEW.ASSOCIATION_ID IS NULL THEN
    SELECT sq_associations_id.nextval INTO :NEW.ASSOCIATION_ID
      FROM dual;
  END IF;
END;